name: Deploy to EC2

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}
  EC2_KEY: ${{ secrets.EC2_KEY }}
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  RDS_HOST: ${{ secrets.RDS_HOST }}
  RDS_USER: ${{ secrets.RDS_USER }}
  RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${EC2_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Test SSH connection
        run: ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "echo Connected successfully!"

      - name: Pull Docker images and run containers
        run: |
          ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} \
          "echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u $DOCKER_HUB_USERNAME --password-stdin && \
           docker rm -f iam || true && \
           docker rm -f bookstore || true && \
           docker pull $DOCKER_HUB_USERNAME/iam:latest && \
           docker pull $DOCKER_HUB_USERNAME/bookstore:latest && \
           docker run -d --name iam -e SPRING_DATASOURCE_URL=jdbc:mysql://$RDS_HOST:3306/sporty_iam -e SPRING_DATASOURCE_USERNAME=$RDS_USER -e SPRING_DATASOURCE_PASSWORD=$RDS_PASSWORD -p 8081:8081 $DOCKER_HUB_USERNAME/iam:latest && \
           docker run -d --name bookstore -e SPRING_DATASOURCE_URL=jdbc:mysql://$RDS_HOST:3306/sporty_db -e SPRING_DATASOURCE_USERNAME=$RDS_USER -e SPRING_DATASOURCE_PASSWORD=$RDS_PASSWORD -p 8080:8080 $DOCKER_HUB_USERNAME/bookstore:latest"